$testobject {
	$comment """
		Test design
	"""
	$declarations '''
		/* Test Object specific Declarations */
		void Init_Stack(void);
	'''
	$definitions '''
		/* Test Object Definitions */
	'''
	$stubfunctions {
		void print_f(char * pChar) '''
			/* Test Object specific Stub Function */
		'''
	}

	$testcase 1 {
		$name "Read value from stack, no error"
		$uuid "77dfbbf5-2571-4e34-9956-6136962cc4fa"
		$specification """
			Stack contains correct values, no errors
		"""
		$description """
			Value from top of the stack is returned
		"""
		$prolog '''
			/* Test Case 1 Prolog */
		'''
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 1 specific Stub Function */
			'''
		}

		$teststep 1.1 {
			$name ""
			$uuid "21e2b709-3236-4840-905e-7b8d617f68da"
			$prolog '''
				/* Test Step 1 Prolog */
			'''
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 1.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = 3
				ulStack[9] = 2
				ulStack[10] = 1
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 10
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStackCounter = 9
				return 2
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
			$epilog '''
				/* Test Step 1 Epiolog */
			'''
		}
		$epilog '''
			/* Test Case 1 Epiolog */
		'''
	}

	$testcase 2 {
		$name "Stack is not in running state"
		$uuid "f7bcb6b8-f204-41c8-ac16-7c80ada9c462"
		$specification """
			Stack State is INIT
		"""
		$description """
			Error occurs, 0 is returned
		"""
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 2 specific Stub Function */
			'''
		}

		$teststep 2.1 {
			$name ""
			$uuid "e322b5ec-2682-4faa-909d-bde5e835294e"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 2.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = INIT
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = 1
				ulStack[10] = 2
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 10
			}
			$outputs {
				eStackState = ERROR
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 1
					stack_underflow = 0
				}
				ulErrorState != 0
				ulStackCounter = 10
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 3 {
		$name "Stack is empty"
		$uuid "9f61616c-7e29-4629-8721-f836ec13553d"
		$specification """
			Stack Counter is 0
		"""
		$description """
			Error occurs, 0 is returned
		"""
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 3 specific Stub Function */
			'''
		}

		$teststep 3.1 {
			$name ""
			$uuid "ef29fbd0-9125-4e92-97cd-ef4635daef80"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 3.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = 2
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 0
			}
			$outputs {
				eStackState = ERROR
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 1
					stack_underflow = 1
				}
				ulErrorState > 0
				ulStackCounter = 0
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 4 {
		$name "Strange Test Case!"
		$uuid "57e051a0-8458-4417-b40f-a5fbdf25f702"
		$specification """
			Stack is initialized from boot code
		"""
		$description """
			No error occur, 0 is returned
		"""
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 4 specific Stub Function */
			'''
		}

		$teststep 4.1 {
			$name ""
			$uuid "956fd0e7-735e-43d5-a114-972340ecdd63"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 4.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 9
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 5 {
		$name "Solution with Init_Stack()"
		$uuid "8ab75e35-a5e3-4827-a9f9-610e574428fe"
		$specification """
			Stack variables are initialised; Check Init_Stack() for subsequent changes
		"""
		$description """
			Now Test Case is pass
		"""
		$prolog '''
			Init_Stack();
		'''
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 5 specific Stub Function */
			'''
		}

		$teststep 5.1 {
			$name ""
			$uuid "c578f2cd-5144-4e73-9cb9-bdb0068fdac1"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 5.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 9
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 6 {
		$name "Solution with initialisation in User Code"
		$uuid "c6c70e92-a817-4303-aad8-82a09c7557a6"
		$specification """
			Stack variables are initialised
		"""
		$description """
			Now Test Case is pass
		"""
		$prolog '''
			int i;
			for (i = 0; i < STACKMAX; i++) {
				ulStack[i] = 0;
			}
			ulErrorState = ERR_no_error;
			uErrorState.ulValue = ERR_no_error;
			ulStackCounter = 0;
			eStackState = RUNNING;
		'''
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 5 specific Stub Function */
			'''
		}

		$teststep 6.1 {
			$name ""
			$uuid "6ec05891-8e60-41cb-9416-548ecc1b9439"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 5.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 9
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 7 {
		$name "Solution with correct defined interface"
		$uuid "84108834-e0fc-484c-a8de-7bfca39d5e22"
		$specification """
			Stack variables are initialized
		"""
		$description """
			Now Test Case is pass
		"""
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 4 specific Stub Function */
			'''
		}

		$teststep 7.1 {
			$name ""
			$uuid "10a3acc6-6ad3-4ba2-9b34-d6835e923edb"
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 4.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = 0
				ulStack[1] = 0
				ulStack[2] = 0
				ulStack[3] = 0
				ulStack[4] = 0
				ulStack[5] = 0
				ulStack[6] = 0
				ulStack[7] = 0
				ulStack[8] = 0
				ulStack[9] = 0
				ulStack[10] = 0
				ulStack[11] = 0
				ulStack[12] = 0
				ulStack[13] = 0
				ulStack[14] = 0
				ulStack[15] = 0
				ulStack[16] = 0
				ulStack[17] = 0
				ulStack[18] = 0
				ulStack[19] = 0
				ulStack[20] = 0
				ulStack[21] = 0
				ulStack[22] = 0
				ulStack[23] = 0
				ulStack[24] = 0
				ulStack[25] = 0
				ulStack[26] = 0
				ulStack[27] = 0
				ulStack[28] = 0
				ulStack[29] = 0
				ulStackCounter = 9
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 8 {
		$name "Get three values from stack"
		$uuid "df59ec7d-2309-44a1-9ac4-127ec07f8882"
		$specification """
			Stack is initialized with three values
		"""
		$description """
			No error occur, values successfully read
		"""

		$teststep 8.1 {
			$name "First access from stack"
			$uuid "9ecf8661-4726-4025-b4ac-7f6b0b1e2835"
			$specification """
				Top of stack contains value 50
			"""
			$description """
				Get first value from stack
			"""
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = 20
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = 30
				ulStack[9] = 40
				ulStack[10] = 50
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 11
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 10
				return 50
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}

		$teststep 8.2 {
			$name "Second access from stack"
			$uuid "bb27952e-82cc-4b94-9ac7-7f239fed5938"
			$specification """
				Top of stack contains value 40
			"""
			$description """
				Get second value from stack
			"""
			$inputs {
				eStackState = *none*
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = *none*
					stack_underflow = *none*
				}
				ulErrorState = *none*
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = *none*
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 9
				return 40
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}

		$teststep 8.3 {
			$name "Third access from stack"
			$uuid "c11dd41c-4a0b-47a4-b07a-4b06f51cee48"
			$specification """
				Top of stack contains value 30
			"""
			$description """
				Get third value from stack
			"""
			$inputs {
				eStackState = *none*
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = *none*
					stack_underflow = *none*
				}
				ulErrorState = *none*
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = *none*
			}
			$outputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 30
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}

	$testcase 9 {
		$name "What is the problem?"
		$uuid "598f137e-7893-45f4-891c-fca07284966a"
		$specification """
			Check Init_Stack() for subsequent changes
		"""
		$description """
			Test Case should be pass!?
		"""
		$stubfunctions {
			void print_f(char * pChar) '''
				/* Test Case 5 specific Stub Function */
			'''
		}

		$teststep 9.1 {
			$name ""
			$uuid "363a341b-0513-4d5e-8aa7-cc1747ae1b40"
			$prolog '''
				/* wrong position here, TESSY inserted test data are overwritten */
				/* should be moved to the Test Case Prolog */
				Init_Stack();
			'''
			$stubfunctions {
				void print_f(char * pChar) '''
					/* Test Step 5.1 specific Stub Function */
				'''
			}
			$inputs {
				eStackState = RUNNING
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = ERR_no_error
				ulStack[0] = *none*
				ulStack[1] = *none*
				ulStack[2] = *none*
				ulStack[3] = *none*
				ulStack[4] = *none*
				ulStack[5] = *none*
				ulStack[6] = *none*
				ulStack[7] = *none*
				ulStack[8] = *none*
				ulStack[9] = *none*
				ulStack[10] = *none*
				ulStack[11] = *none*
				ulStack[12] = *none*
				ulStack[13] = *none*
				ulStack[14] = *none*
				ulStack[15] = *none*
				ulStack[16] = *none*
				ulStack[17] = *none*
				ulStack[18] = *none*
				ulStack[19] = *none*
				ulStack[20] = *none*
				ulStack[21] = *none*
				ulStack[22] = *none*
				ulStack[23] = *none*
				ulStack[24] = *none*
				ulStack[25] = *none*
				ulStack[26] = *none*
				ulStack[27] = *none*
				ulStack[28] = *none*
				ulStack[29] = *none*
				ulStackCounter = 9
			}
			$outputs {
				eStackState = ERROR
				uErrorState = ulBits
				uErrorState.ulBits {
					stack_state_wrong = 0
					stack_underflow = 0
				}
				ulErrorState = 0
				ulStackCounter = 8
				return 0
			}
			$calltrace {
				*** Ignore Call Trace ***
			}
		}
	}
}